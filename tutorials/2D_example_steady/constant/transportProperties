/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      transportProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
transportModel Newtonian;

phiDyMBoundary // thermal voltage
{
	name	top;
	phiStart	0;
	phiEnd		25;
	phiInterval	1;
}

Ions
{
    ionsList(cPlus,cMinus); 

	cPlus
	{
		variableName cPlus; 		
		z z [0 0 0 0 0 0 0] 1; // valence
		D D [0 2 -1 0 0 0 0] 1.33e-9; // diffusivity
	}

	cMinus
	{
		variableName cMinus; 		
		z z [0 0 0 0 0 0 0] -1; // valence
		D D [0 2 -1 0 0 0 0] 2.03e-9; // diffusivity
 	}
}
floatingChargeVolumes 
{
   volumes (frontAndBack);
   top  {N 0;}
   
} 

Desalination
{
	Cation C1;
	Anion C2; 
	desalinationInlet (top);
	desalinationOutlet (bottom);
	Mem1Name  bottom;
        Mem2Name  top;
	//membraneName (left_mem right_mem)) ;
	//membraneType curve;
	desaltType ICP;

	Potential Phi;
	Velocity U;
 	Pressure p;

}

ElectrokineticAnalysis
{
	calculatePowerDissipation no;
	writeIonicFluxBoundary no;
  	calculateIVresponse yes; 
}


Electrolyte
{
  	Cation cPlus;
	Anion cMinus; 

	Potential psiE;
	Velocity U;
  	Pressure p;

    l0              l0 [0 1 0 0 0 0 0] 10e-6; // length-scale 
    c0              c0 [0 -3 0 0 1 0 0] 10; // Bulk Concentration   
    T               T  [0 0 0 1 0 0 0] 300; // Absolute temperature    
    epsr          epsr [0 0 0 0 0 0 0] 80; // dielectric constant 
    mu              mu [1 -1 -1 0 0 0 0] 1e-3; //[kg/(m*s)] dynamic viscosity
    rho            rho [1 -3 0 0 0 0 0] 1000; //[kg/m^3] density
    nu              nu [0 2 -1 0 0 0 0] 1e-6; //[m^2/s] kinematic viscosity 
}

// ************************************************************************* //
